/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package domino.client;

import java.util.ArrayList;

/**
 *
 * @author User
 */
public class UserView extends javax.swing.JFrame implements ViewCommands {
    private ArrayList<DominoV> own = new ArrayList<>();
    private ArrayList<DominoVH> chain = new ArrayList<>();
    private ViewEvents events;
    /**
     * Creates new form UserView
     */
    public UserView(ViewEvents e0) {
        events = e0;
        initComponents();
        this.setBounds(100,100, 500,500);
    }
    @Override
    public void setOwn(Domino dom) {
        DominoV vv = new DominoV(dom, new DominoPushed() {
            @Override
            public void onPush(Domino dom) {
                // TODO клик по ней
                events.pushDomino(dom,true);
            }
        });
        vv.setLocation(20+own.size()*(DominoVH.sz+5),50);
        own.add(vv);
        add(vv);
    }

    @Override
    public void removeOwn(int num) {

    }

    @Override
    public void setLeft(Domino dom) {

    }

    @Override
    public void setRight(Domino dom) {

    }

    @Override
    public void startPlay() {

    }

    @Override
    public void stopPlay() {

    }

    @Override
    public void message(String mes) {
        MES.setText(mes);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        MES = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(MES);
        MES.setBounds(20, 10, 500, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UserView xx = new UserView(new ViewEvents() {
                    @Override
                    public void pushBreak() {

                        }
                    @Override
                    public void pushFromMarket() {

                        }
                    @Override
                    public void pushNoStep() {

                        }
                    @Override
                    public void pushDomino(Domino dom, boolean left) {
                        System.out.println(dom+" "+left);
                        }
                    @Override
                    public void startPlay(String name) {

                    }
                });
                xx.setVisible(true);
                xx.message("а-а-а-а-а-а-а-а");
                xx.setOwn(new Domino(5,4,1000));
                xx.setOwn(new Domino(5,2,1001));
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MES;
    // End of variables declaration//GEN-END:variables
}
